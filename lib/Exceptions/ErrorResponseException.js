/**
 * StytchLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const APIException = require('./APIException');

/**
 * Creates an instance of ErrorResponseException
 */
class ErrorResponseException extends APIException {
    /**
     * @constructor
     */
    constructor() {
        super();
        /**
         * The type of error such as user_not_found, invalid_parameters, etc that specifically
         * describes the reason the error occurred.
         */
        this.errorType = null;

        /**
         * A human readable description of the error with details on debugging.
         */
        this.errorMessage = null;

        /**
         * A message that can be displayed to the user. null if the error is not related to user action.
         */
        this.displayMessage = null;

        /**
         * Url for where in the docs to find more information about this error.
         */
        this.errorUrl = null;
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'errorType', realName: 'error_type' },
            { name: 'errorMessage', realName: 'error_message' },
            { name: 'displayMessage', realName: 'display_message' },
            { name: 'errorUrl', realName: 'error_url' },
        ]);
    }
}

module.exports = ErrorResponseException;
